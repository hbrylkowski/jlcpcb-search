input {
  file {
    path => "/usr/share/logstash/parts.csv"
    start_position => "beginning"
    codec => plain {
      charset => "GB18030"
    }
  }
  http_poller {
    urls => {
      parts => "https://jlcpcb.com/componentSearch/uploadComponentInfo"
    }
    schedule => { cron => "00 1 * * * UTC"}
    codec => line {
      charset => "GB18030"
    }
  }
}
filter {
  mutate {
    gsub => [
      "message", "\"\"", "\""
    ]
    gsub => [
      "message", ",\"", ",$"
    ]
    gsub => [
      "message", "\",", "$,"
    ]
  }
  csv {
    autodetect_column_names => true
    quote_char => "$"
  }
  grok {
    break_on_match => false
    match => {
      "Description" => [
        "(?<power>((\d+/\d+)|(\d+(.\d+)?[a-zA-Z]?))W)",
        "(?<capacitance>\d+(\.\d+)?[a-zA-Z]?F)",
        "(?<tolerance>±\d+(\.\d+)?%)",
        "(?<resistance>\d+(\.\d+)?[a-zA-Z]?Ω)",
        "(?<voltage>\d+(\.\d+)?[a-zA-Z]?V)"
      ]
    }
  }
  mutate {
    add_field => {"lcsc_url" => "https://lcsc.com/product-detail/%{Second Category}_%{Manufacturer}_%{MFR.Part}_%{LCSC Part}.html"}
  }
  mutate {
    gsub => [
      "lcsc_url", " ", "-"
    ]
    gsub => [
      "Price", "-\d*", ""
    ]
  }
  mutate {
    split => {"Price" => ","}
  }
  mutate {
    add_field => {"min order" => "%{Price}[0]"}
    add_field => {"min price" => "%{Price}[0]"}
  }
  mutate {
    gsub => [
      "min order", ":\d*", ""
    ]
    gsub => [
      "min price", "\d*:", ""
    ]
  }
  mutate {
    convert => {
      "min order" => "integer"
      "min price" => "float"
    }
  }
  ruby {
    code => 'event.set("min_cost", event.get("min order") * event.get("min price"))'
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch"
    index => "jlc"
    document_id => "%{LCSC Part}"
    doc_as_upsert => true
  }
}
